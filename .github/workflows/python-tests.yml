name: tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # nécessaire pour pousser vers la branche ci-assets

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Smoke import
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python - <<'PY'
          import os
          print("PYTHONPATH=", os.environ.get("PYTHONPATH"))
          import sim.graph_generators, sim.poincare_check, sim.gamma_convergence, sim.hyperbolicity_test
          print("SIM imports OK")
          PY

      - name: Quick smoke run (small graph)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          mkdir -p data/seeds figures
          python sim/graph_generators.py --dim 4 --N 5000 --seed 0 --out data/seeds/g_small.npz
          python sim/poincare_check.py --graph data/seeds/g_small.npz --samples 2 --out figures/fig_poincare_ratio_ci.png

      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest -q

      # Publie l'image générée dans une branche dédiée, accessible publiquement
      - name: Prepare assets
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir -p assets/figures
          cp figures/fig_poincare_ratio_ci.png assets/figures/fig_poincare_ratio_ci.png

      - name: Publish figure to ci-assets branch
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          # Crée un repo minimal dans un dossier séparé et pousse sur la branche 'ci-assets'
          rm -rf ci-publish
          mkdir ci-publish
          cp -r assets ci-publish/assets
          cd ci-publish
          git init
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote add origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git checkout -b ci-assets
          git add -A
          git commit -m "CI: update figure (run ${GITHUB_RUN_NUMBER})" || echo "No changes to commit"
          git push -f origin ci-assets
